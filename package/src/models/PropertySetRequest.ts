/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1 (v1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PropertyRequest,
    PropertyRequestFromJSON,
    PropertyRequestFromJSONTyped,
    PropertyRequestToJSON,
} from './PropertyRequest';

/**
 * Adds nested create feature
 * @export
 * @interface PropertySetRequest
 */
export interface PropertySetRequest {
    /**
     * 
     * @type {string}
     * @memberof PropertySetRequest
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertySetRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertySetRequest
     */
    type?: string | null;
    /**
     * 
     * @type {Array<PropertyRequest>}
     * @memberof PropertySetRequest
     */
    properties?: Array<PropertyRequest>;
}

export function PropertySetRequestFromJSON(json: any): PropertySetRequest {
    return PropertySetRequestFromJSONTyped(json, false);
}

export function PropertySetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertySetRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'properties': !exists(json, 'properties') ? undefined : ((json['properties'] as Array<any>).map(PropertyRequestFromJSON)),
    };
}

export function PropertySetRequestToJSON(value?: PropertySetRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'type': value.type,
        'properties': value.properties === undefined ? undefined : ((value.properties as Array<any>).map(PropertyRequestToJSON)),
    };
}

