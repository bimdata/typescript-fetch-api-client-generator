/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GeometryPoint,
    GeometryPointFromJSON,
    GeometryPointFromJSONTyped,
    GeometryPointToJSON,
} from './GeometryPoint';

/**
 * 
 * @export
 * @interface PinWithModels
 */
export interface PinWithModels {
    /**
     * 
     * @type {string}
     * @memberof PinWithModels
     */
    readonly guid: string;
    /**
     * 
     * @type {string}
     * @memberof PinWithModels
     */
    readonly name: string | null;
    /**
     * 
     * @type {string}
     * @memberof PinWithModels
     */
    readonly color: string | null;
    /**
     * 
     * @type {GeometryPoint}
     * @memberof PinWithModels
     */
    point: GeometryPoint;
    /**
     * 
     * @type {number}
     * @memberof PinWithModels
     */
    readonly index: number | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof PinWithModels
     */
    readonly model_ids: Array<number>;
}

export function PinWithModelsFromJSON(json: any): PinWithModels {
    return PinWithModelsFromJSONTyped(json, false);
}

export function PinWithModelsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PinWithModels {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'guid': json['guid'],
        'name': json['name'],
        'color': json['color'],
        'point': GeometryPointFromJSON(json['point']),
        'index': json['index'],
        'model_ids': json['model_ids'],
    };
}

export function PinWithModelsToJSON(value?: PinWithModels | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'point': GeometryPointToJSON(value.point),
    };
}

