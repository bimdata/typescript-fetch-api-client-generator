/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentText
 */
export interface DocumentText {
    /**
     * 
     * @type {number}
     * @memberof DocumentText
     */
    readonly id: number;
    /**
     * The full text representation of a document if the feature is enabled and the file format supported
     * @type {string}
     * @memberof DocumentText
     */
    text?: string | null;
    /**
     * * `german` - german
     * * `french` - french
     * * `spanish` - spanish
     * * `italian` - italian
     * * `english` - english
     * @type {string}
     * @memberof DocumentText
     */
    language?: DocumentTextLanguageEnum;
}

/**
* @export
* @enum {string}
*/
export enum DocumentTextLanguageEnum {
    German = 'german',
    French = 'french',
    Spanish = 'spanish',
    Italian = 'italian',
    English = 'english',
    Null = 'null'
}

export function DocumentTextFromJSON(json: any): DocumentText {
    return DocumentTextFromJSONTyped(json, false);
}

export function DocumentTextFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentText {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'language': !exists(json, 'language') ? undefined : json['language'],
    };
}

export function DocumentTextToJSON(value?: DocumentText | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'text': value.text,
        'language': value.language,
    };
}

