/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Extensions(id, project)
 * @export
 * @interface Extensions
 */
export interface Extensions {
    /**
     * 
     * @type {Array<string>}
     * @memberof Extensions
     */
    topicType: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Extensions
     */
    topicStatus: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Extensions
     */
    topicLabel: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Extensions
     */
    priority: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Extensions
     */
    readonly userIdType?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Extensions
     */
    stage: Array<string> | null;
}

export function ExtensionsFromJSON(json: any): Extensions {
    return ExtensionsFromJSONTyped(json, false);
}

export function ExtensionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Extensions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'topicType': json['topic_type'],
        'topicStatus': json['topic_status'],
        'topicLabel': json['topic_label'],
        'priority': json['priority'],
        'userIdType': !exists(json, 'user_id_type') ? undefined : json['user_id_type'],
        'stage': json['stage'],
    };
}

export function ExtensionsToJSON(value?: Extensions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'topic_type': value.topicType,
        'topic_status': value.topicStatus,
        'topic_label': value.topicLabel,
        'priority': value.priority,
        'stage': value.stage,
    };
}


