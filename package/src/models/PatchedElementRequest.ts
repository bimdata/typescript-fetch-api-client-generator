/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1 (v1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ClassificationRequest,
    ClassificationRequestFromJSON,
    ClassificationRequestFromJSONTyped,
    ClassificationRequestToJSON,
    LayerElementRequest,
    LayerElementRequestFromJSON,
    LayerElementRequestFromJSONTyped,
    LayerElementRequestToJSON,
    PropertySetRequest,
    PropertySetRequestFromJSON,
    PropertySetRequestFromJSONTyped,
    PropertySetRequestToJSON,
} from './';

/**
 * Adds nested create feature
 * @export
 * @interface PatchedElementRequest
 */
export interface PatchedElementRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedElementRequest
     */
    uuid?: string;
    /**
     * IFC type for the element
     * @type {string}
     * @memberof PatchedElementRequest
     */
    type?: string;
    /**
     * 
     * @type {PropertySetRequest}
     * @memberof PatchedElementRequest
     */
    attributes?: PropertySetRequest;
    /**
     * 
     * @type {Array<PropertySetRequest>}
     * @memberof PatchedElementRequest
     */
    propertySets?: Array<PropertySetRequest>;
    /**
     * 
     * @type {Array<ClassificationRequest>}
     * @memberof PatchedElementRequest
     */
    classifications?: Array<ClassificationRequest>;
    /**
     * 
     * @type {Array<LayerElementRequest>}
     * @memberof PatchedElementRequest
     */
    layers?: Array<LayerElementRequest>;
}

export function PatchedElementRequestFromJSON(json: any): PatchedElementRequest {
    return PatchedElementRequestFromJSONTyped(json, false);
}

export function PatchedElementRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedElementRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'attributes': !exists(json, 'attributes') ? undefined : PropertySetRequestFromJSON(json['attributes']),
        'propertySets': !exists(json, 'property_sets') ? undefined : ((json['property_sets'] as Array<any>).map(PropertySetRequestFromJSON)),
        'classifications': !exists(json, 'classifications') ? undefined : ((json['classifications'] as Array<any>).map(ClassificationRequestFromJSON)),
        'layers': !exists(json, 'layers') ? undefined : ((json['layers'] as Array<any>).map(LayerElementRequestFromJSON)),
    };
}

export function PatchedElementRequestToJSON(value?: PatchedElementRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'type': value.type,
        'attributes': PropertySetRequestToJSON(value.attributes),
        'property_sets': value.propertySets === undefined ? undefined : ((value.propertySets as Array<any>).map(PropertySetRequestToJSON)),
        'classifications': value.classifications === undefined ? undefined : ((value.classifications as Array<any>).map(ClassificationRequestToJSON)),
        'layers': value.layers === undefined ? undefined : ((value.layers as Array<any>).map(LayerElementRequestToJSON)),
    };
}


