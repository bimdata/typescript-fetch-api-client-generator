/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RawClassificationRequest,
    RawClassificationRequestFromJSON,
    RawClassificationRequestFromJSONTyped,
    RawClassificationRequestToJSON,
} from './RawClassificationRequest';
import {
    RawDefinitionRequest,
    RawDefinitionRequestFromJSON,
    RawDefinitionRequestFromJSONTyped,
    RawDefinitionRequestToJSON,
} from './RawDefinitionRequest';
import {
    RawElementRequest,
    RawElementRequestFromJSON,
    RawElementRequestFromJSONTyped,
    RawElementRequestToJSON,
} from './RawElementRequest';
import {
    RawLayerRequest,
    RawLayerRequestFromJSON,
    RawLayerRequestFromJSONTyped,
    RawLayerRequestToJSON,
} from './RawLayerRequest';
import {
    RawMaterialListRequest,
    RawMaterialListRequestFromJSON,
    RawMaterialListRequestFromJSONTyped,
    RawMaterialListRequestToJSON,
} from './RawMaterialListRequest';
import {
    RawPropertySetRequest,
    RawPropertySetRequestFromJSON,
    RawPropertySetRequestFromJSONTyped,
    RawPropertySetRequestToJSON,
} from './RawPropertySetRequest';
import {
    RawSystemRequest,
    RawSystemRequestFromJSON,
    RawSystemRequestFromJSONTyped,
    RawSystemRequestToJSON,
} from './RawSystemRequest';
import {
    RawUnitRequest,
    RawUnitRequestFromJSON,
    RawUnitRequestFromJSONTyped,
    RawUnitRequestToJSON,
} from './RawUnitRequest';

/**
 * 
 * @export
 * @interface RawElementsRequest
 */
export interface RawElementsRequest {
    /**
     * 
     * @type {Array<RawUnitRequest>}
     * @memberof RawElementsRequest
     */
    units?: Array<RawUnitRequest> | null;
    /**
     * 
     * @type {Array<RawDefinitionRequest>}
     * @memberof RawElementsRequest
     */
    definitions?: Array<RawDefinitionRequest> | null;
    /**
     * 
     * @type {Array<RawPropertySetRequest>}
     * @memberof RawElementsRequest
     */
    property_sets?: Array<RawPropertySetRequest> | null;
    /**
     * 
     * @type {Array<RawClassificationRequest>}
     * @memberof RawElementsRequest
     */
    classifications?: Array<RawClassificationRequest> | null;
    /**
     * 
     * @type {Array<RawLayerRequest>}
     * @memberof RawElementsRequest
     */
    layers?: Array<RawLayerRequest> | null;
    /**
     * 
     * @type {Array<RawSystemRequest>}
     * @memberof RawElementsRequest
     */
    systems?: Array<RawSystemRequest> | null;
    /**
     * 
     * @type {RawMaterialListRequest}
     * @memberof RawElementsRequest
     */
    materials?: RawMaterialListRequest | null;
    /**
     * 
     * @type {Array<RawElementRequest>}
     * @memberof RawElementsRequest
     */
    elements: Array<RawElementRequest>;
}

export function RawElementsRequestFromJSON(json: any): RawElementsRequest {
    return RawElementsRequestFromJSONTyped(json, false);
}

export function RawElementsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RawElementsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'units': !exists(json, 'units') ? undefined : (json['units'] === null ? null : (json['units'] as Array<any>).map(RawUnitRequestFromJSON)),
        'definitions': !exists(json, 'definitions') ? undefined : (json['definitions'] === null ? null : (json['definitions'] as Array<any>).map(RawDefinitionRequestFromJSON)),
        'property_sets': !exists(json, 'property_sets') ? undefined : (json['property_sets'] === null ? null : (json['property_sets'] as Array<any>).map(RawPropertySetRequestFromJSON)),
        'classifications': !exists(json, 'classifications') ? undefined : (json['classifications'] === null ? null : (json['classifications'] as Array<any>).map(RawClassificationRequestFromJSON)),
        'layers': !exists(json, 'layers') ? undefined : (json['layers'] === null ? null : (json['layers'] as Array<any>).map(RawLayerRequestFromJSON)),
        'systems': !exists(json, 'systems') ? undefined : (json['systems'] === null ? null : (json['systems'] as Array<any>).map(RawSystemRequestFromJSON)),
        'materials': !exists(json, 'materials') ? undefined : RawMaterialListRequestFromJSON(json['materials']),
        'elements': ((json['elements'] as Array<any>).map(RawElementRequestFromJSON)),
    };
}

export function RawElementsRequestToJSON(value?: RawElementsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'units': value.units === undefined ? undefined : (value.units === null ? null : (value.units as Array<any>).map(RawUnitRequestToJSON)),
        'definitions': value.definitions === undefined ? undefined : (value.definitions === null ? null : (value.definitions as Array<any>).map(RawDefinitionRequestToJSON)),
        'property_sets': value.property_sets === undefined ? undefined : (value.property_sets === null ? null : (value.property_sets as Array<any>).map(RawPropertySetRequestToJSON)),
        'classifications': value.classifications === undefined ? undefined : (value.classifications === null ? null : (value.classifications as Array<any>).map(RawClassificationRequestToJSON)),
        'layers': value.layers === undefined ? undefined : (value.layers === null ? null : (value.layers as Array<any>).map(RawLayerRequestToJSON)),
        'systems': value.systems === undefined ? undefined : (value.systems === null ? null : (value.systems as Array<any>).map(RawSystemRequestToJSON)),
        'materials': RawMaterialListRequestToJSON(value.materials),
        'elements': ((value.elements as Array<any>).map(RawElementRequestToJSON)),
    };
}

