/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Material,
    MaterialFromJSON,
    MaterialFromJSONTyped,
    MaterialToJSON,
    MaterialOption,
    MaterialOptionFromJSON,
    MaterialOptionFromJSONTyped,
    MaterialOptionToJSON,
} from './';

/**
 * Default behavior: - retrieve kwargs in the route (cloud_pk, project_pk, etc) - trim the _pk (cloud_pk => cloud) - check if the object has a foreign key with the name - if so, set the foreign key to the value in the route Override: If the serializer has a method \"get_parents\", we call it and set the parents The method \"get_parents\" should return an iterable of tuples : (parent_field_name, parent_object)
 * @export
 * @interface MaterialListComponent
 */
export interface MaterialListComponent {
    /**
     * 
     * @type {Material}
     * @memberof MaterialListComponent
     */
    material?: Material;
    /**
     * 
     * @type {MaterialOption}
     * @memberof MaterialListComponent
     */
    option: MaterialOption;
}

export function MaterialListComponentFromJSON(json: any): MaterialListComponent {
    return MaterialListComponentFromJSONTyped(json, false);
}

export function MaterialListComponentFromJSONTyped(json: any, ignoreDiscriminator: boolean): MaterialListComponent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'material': !exists(json, 'material') ? undefined : MaterialFromJSON(json['material']),
        'option': MaterialOptionFromJSON(json['option']),
    };
}

export function MaterialListComponentToJSON(value?: MaterialListComponent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'material': MaterialToJSON(value.material),
        'option': MaterialOptionToJSON(value.option),
    };
}


