/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InlineResponse200,
    InlineResponse200FromJSON,
    InlineResponse200FromJSONTyped,
    InlineResponse200ToJSON,
    InlineResponse2001,
    InlineResponse2001FromJSON,
    InlineResponse2001FromJSONTyped,
    InlineResponse2001ToJSON,
} from './';

/**
 * 
 * @export
 * @interface GroupFolder
 */
export interface GroupFolder {
    /**
     * 
     * @type {InlineResponse200}
     * @memberof GroupFolder
     */
    folder?: InlineResponse200;
    /**
     * 
     * @type {InlineResponse2001}
     * @memberof GroupFolder
     */
    group?: InlineResponse2001;
    /**
     * Group's permission for a folder
     * @type {number}
     * @memberof GroupFolder
     */
    permission?: number;
}

export function GroupFolderFromJSON(json: any): GroupFolder {
    return GroupFolderFromJSONTyped(json, false);
}

export function GroupFolderFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupFolder {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'folder': !exists(json, 'folder') ? undefined : InlineResponse200FromJSON(json['folder']),
        'group': !exists(json, 'group') ? undefined : InlineResponse2001FromJSON(json['group']),
        'permission': !exists(json, 'permission') ? undefined : json['permission'],
    };
}

export function GroupFolderToJSON(value?: GroupFolder | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'folder': InlineResponse200ToJSON(value.folder),
        'group': InlineResponse2001ToJSON(value.group),
        'permission': value.permission,
    };
}


