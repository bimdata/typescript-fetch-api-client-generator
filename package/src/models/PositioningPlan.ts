/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PositioningPlan
 */
export interface PositioningPlan {
    /**
     * 
     * @type {number}
     * @memberof PositioningPlan
     */
    translation_x?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PositioningPlan
     */
    translation_y?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PositioningPlan
     */
    rotate_z?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PositioningPlan
     */
    scale?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PositioningPlan
     */
    opacity?: number | null;
}

export function PositioningPlanFromJSON(json: any): PositioningPlan {
    return PositioningPlanFromJSONTyped(json, false);
}

export function PositioningPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): PositioningPlan {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'translation_x': !exists(json, 'translation_x') ? undefined : json['translation_x'],
        'translation_y': !exists(json, 'translation_y') ? undefined : json['translation_y'],
        'rotate_z': !exists(json, 'rotate_z') ? undefined : json['rotate_z'],
        'scale': !exists(json, 'scale') ? undefined : json['scale'],
        'opacity': !exists(json, 'opacity') ? undefined : json['opacity'],
    };
}

export function PositioningPlanToJSON(value?: PositioningPlan | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'translation_x': value.translation_x,
        'translation_y': value.translation_y,
        'rotate_z': value.rotate_z,
        'scale': value.scale,
        'opacity': value.opacity,
    };
}

