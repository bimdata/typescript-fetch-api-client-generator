/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelDocument
 */
export interface ModelDocument {
    /**
     * 
     * @type {number}
     * @memberof ModelDocument
     */
    readonly id: number;
    /**
     * Shown name of the file
     * @type {string}
     * @memberof ModelDocument
     */
    name: string;
    /**
     * Full name of the file
     * @type {string}
     * @memberof ModelDocument
     */
    file_name?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelDocument
     */
    parent_id?: number | null;
    /**
     * Description of the file
     * @type {string}
     * @memberof ModelDocument
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ModelDocument
     */
    file: string;
    /**
     * Size of the file.
     * @type {number}
     * @memberof ModelDocument
     */
    readonly size: number | null;
    /**
     * Creation date
     * @type {Date}
     * @memberof ModelDocument
     */
    readonly created_at: Date;
    /**
     * Date of the last update
     * @type {Date}
     * @memberof ModelDocument
     */
    readonly updated_at: Date;
    /**
     * Document id of head version
     * @type {number}
     * @memberof ModelDocument
     */
    readonly head_id: number | null;
    /**
     * Document is a head of version or is owned by another document
     * @type {boolean}
     * @memberof ModelDocument
     */
    readonly is_head_version: boolean;
    /**
     * Number of previous versions
     * @type {number}
     * @memberof ModelDocument
     */
    readonly history_count: number | null;
    /**
     * Aggregate of group user permissions and folder default permission
     * @type {number}
     * @memberof ModelDocument
     */
    readonly user_permission: ModelDocumentUserPermissionEnum;
    /**
     * Office files will be converted as pdf to provide a web preview. Supported extensions are .ppt, .pptx, .odp, .xls, .xlsx, .ods, .doc, .docx, .odt
     * @type {string}
     * @memberof ModelDocument
     */
    readonly office_preview: string | null;
}

/**
* @export
* @enum {string}
*/
export enum ModelDocumentUserPermissionEnum {
    NUMBER_1 = 1,
    NUMBER_50 = 50,
    NUMBER_100 = 100
}

export function ModelDocumentFromJSON(json: any): ModelDocument {
    return ModelDocumentFromJSONTyped(json, false);
}

export function ModelDocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelDocument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'file_name': !exists(json, 'file_name') ? undefined : json['file_name'],
        'parent_id': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'file': json['file'],
        'size': json['size'],
        'created_at': (new Date(json['created_at'])),
        'updated_at': (new Date(json['updated_at'])),
        'head_id': json['head_id'],
        'is_head_version': json['is_head_version'],
        'history_count': json['history_count'],
        'user_permission': json['user_permission'],
        'office_preview': json['office_preview'],
    };
}

export function ModelDocumentToJSON(value?: ModelDocument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'file_name': value.file_name,
        'parent_id': value.parent_id,
        'description': value.description,
        'file': value.file,
    };
}

