/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TopicEventAction
 */
export interface TopicEventAction {
    /**
     * * `topic_created` - topic_created
     * * `title_updated` - title_updated
     * * `description_updated` - description_updated
     * * `description_removed` - description_removed
     * * `due_date_updated` - due_date_updated
     * * `due_date_removed` - due_date_removed
     * * `assigned_to_updated` - assigned_to_updated
     * * `assigned_to_removed` - assigned_to_removed
     * * `status_updated` - status_updated
     * * `status_removed` - status_removed
     * * `type_updated` - type_updated
     * * `type_removed` - type_removed
     * * `priority_updated` - priority_updated
     * * `priority_removed` - priority_removed
     * * `stage_updated` - stage_updated
     * * `stage_removed` - stage_removed
     * * `label_added` - label_added
     * * `label_removed` - label_removed
     * @type {string}
     * @memberof TopicEventAction
     */
    type: TopicEventActionTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TopicEventAction
     */
    value: string | null;
}

/**
* @export
* @enum {string}
*/
export enum TopicEventActionTypeEnum {
    TopicCreated = 'topic_created',
    TitleUpdated = 'title_updated',
    DescriptionUpdated = 'description_updated',
    DescriptionRemoved = 'description_removed',
    DueDateUpdated = 'due_date_updated',
    DueDateRemoved = 'due_date_removed',
    AssignedToUpdated = 'assigned_to_updated',
    AssignedToRemoved = 'assigned_to_removed',
    StatusUpdated = 'status_updated',
    StatusRemoved = 'status_removed',
    TypeUpdated = 'type_updated',
    TypeRemoved = 'type_removed',
    PriorityUpdated = 'priority_updated',
    PriorityRemoved = 'priority_removed',
    StageUpdated = 'stage_updated',
    StageRemoved = 'stage_removed',
    LabelAdded = 'label_added',
    LabelRemoved = 'label_removed'
}

export function TopicEventActionFromJSON(json: any): TopicEventAction {
    return TopicEventActionFromJSONTyped(json, false);
}

export function TopicEventActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopicEventAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'value': json['value'],
    };
}

export function TopicEventActionToJSON(value?: TopicEventAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'value': value.value,
    };
}

