/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1 (v1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Document,
    DocumentFromJSON,
    DocumentFromJSONTyped,
    DocumentToJSON,
} from './Document';
import {
    ModelSourceEnum,
    ModelSourceEnumFromJSON,
    ModelSourceEnumFromJSONTyped,
    ModelSourceEnumToJSON,
} from './ModelSourceEnum';
import {
    ModelTypeEnum,
    ModelTypeEnumFromJSON,
    ModelTypeEnumFromJSONTyped,
    ModelTypeEnumToJSON,
} from './ModelTypeEnum';
import {
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Model
 */
export interface Model {
    /**
     * 
     * @type {number}
     * @memberof Model
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    name?: string | null;
    /**
     * 
     * @type {ModelTypeEnum}
     * @memberof Model
     */
    readonly type: ModelTypeEnum | null;
    /**
     * 
     * @type {User}
     * @memberof Model
     */
    readonly creator: User | null;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    status: string;
    /**
     * 
     * @type {ModelSourceEnum}
     * @memberof Model
     */
    source?: ModelSourceEnum;
    /**
     * 
     * @type {Date}
     * @memberof Model
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Model
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof Model
     */
    readonly documentId: number | null;
    /**
     * 
     * @type {Document}
     * @memberof Model
     */
    readonly document: Document | null;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    readonly structureFile: string | null;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    readonly systemsFile: string | null;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    readonly mapFile: string | null;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    readonly gltfFile: string | null;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    readonly bvhTreeFile: string | null;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    readonly viewer360File: string | null;
    /**
     * 
     * @type {string}
     * @memberof Model
     */
    readonly xktFile: string | null;
    /**
     * 
     * @type {number}
     * @memberof Model
     */
    readonly projectId: number;
    /**
     * [x,y,z] array of the position of the local_placement in world coordinates
     * @type {Array<number>}
     * @memberof Model
     */
    worldPosition?: Array<number> | null;
    /**
     * How many meters a unit represents
     * @type {number}
     * @memberof Model
     */
    sizeRatio?: number | null;
    /**
     * List of errors that happened during IFC processing
     * @type {Array<string>}
     * @memberof Model
     */
    readonly errors: Array<string> | null;
    /**
     * List of warnings that happened during IFC processing
     * @type {Array<string>}
     * @memberof Model
     */
    readonly warnings: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof Model
     */
    archived?: boolean;
    /**
     * This field is only for information. Updating it won't impact the export.
     * @type {string}
     * @memberof Model
     */
    version?: string | null;
    /**
     * This field is only for information. Updating it won't impact the export.
     * @type {Array<Array<number>>}
     * @memberof Model
     */
    northVector?: Array<Array<number>> | null;
    /**
     * This is the angle in clockwise degree to apply on the 2D to optimise the horizontality of objects. This field is only for information. Updating it won't impact the export.
     * @type {number}
     * @memberof Model
     */
    recommanded2dAngle?: number | null;
}

export function ModelFromJSON(json: any): Model {
    return ModelFromJSONTyped(json, false);
}

export function ModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Model {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': ModelTypeEnumFromJSON(json['type']),
        'creator': UserFromJSON(json['creator']),
        'status': json['status'],
        'source': !exists(json, 'source') ? undefined : ModelSourceEnumFromJSON(json['source']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'documentId': json['document_id'],
        'document': DocumentFromJSON(json['document']),
        'structureFile': json['structure_file'],
        'systemsFile': json['systems_file'],
        'mapFile': json['map_file'],
        'gltfFile': json['gltf_file'],
        'bvhTreeFile': json['bvh_tree_file'],
        'viewer360File': json['viewer_360_file'],
        'xktFile': json['xkt_file'],
        'projectId': json['project_id'],
        'worldPosition': !exists(json, 'world_position') ? undefined : json['world_position'],
        'sizeRatio': !exists(json, 'size_ratio') ? undefined : json['size_ratio'],
        'errors': json['errors'],
        'warnings': json['warnings'],
        'archived': !exists(json, 'archived') ? undefined : json['archived'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'northVector': !exists(json, 'north_vector') ? undefined : json['north_vector'],
        'recommanded2dAngle': !exists(json, 'recommanded_2d_angle') ? undefined : json['recommanded_2d_angle'],
    };
}

export function ModelToJSON(value?: Model | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'status': value.status,
        'source': ModelSourceEnumToJSON(value.source),
        'world_position': value.worldPosition,
        'size_ratio': value.sizeRatio,
        'archived': value.archived,
        'version': value.version,
        'north_vector': value.northVector,
        'recommanded_2d_angle': value.recommanded2dAngle,
    };
}

