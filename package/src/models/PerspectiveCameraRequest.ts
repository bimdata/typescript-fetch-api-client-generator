/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1 (v1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DirectionRequest,
    DirectionRequestFromJSON,
    DirectionRequestFromJSONTyped,
    DirectionRequestToJSON,
    PointRequest,
    PointRequestFromJSON,
    PointRequestFromJSONTyped,
    PointRequestToJSON,
} from './';

/**
 * Adds nested create feature
 * @export
 * @interface PerspectiveCameraRequest
 */
export interface PerspectiveCameraRequest {
    /**
     * 
     * @type {number}
     * @memberof PerspectiveCameraRequest
     */
    fieldOfView: number;
    /**
     * 
     * @type {DirectionRequest}
     * @memberof PerspectiveCameraRequest
     */
    cameraDirection: DirectionRequest;
    /**
     * 
     * @type {DirectionRequest}
     * @memberof PerspectiveCameraRequest
     */
    cameraUpVector: DirectionRequest;
    /**
     * 
     * @type {PointRequest}
     * @memberof PerspectiveCameraRequest
     */
    cameraViewPoint: PointRequest;
    /**
     * 
     * @type {DirectionRequest}
     * @memberof PerspectiveCameraRequest
     */
    bimdataCameraDirection?: DirectionRequest;
}

export function PerspectiveCameraRequestFromJSON(json: any): PerspectiveCameraRequest {
    return PerspectiveCameraRequestFromJSONTyped(json, false);
}

export function PerspectiveCameraRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PerspectiveCameraRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldOfView': json['field_of_view'],
        'cameraDirection': DirectionRequestFromJSON(json['camera_direction']),
        'cameraUpVector': DirectionRequestFromJSON(json['camera_up_vector']),
        'cameraViewPoint': PointRequestFromJSON(json['camera_view_point']),
        'bimdataCameraDirection': !exists(json, 'bimdata_camera_direction') ? undefined : DirectionRequestFromJSON(json['bimdata_camera_direction']),
    };
}

export function PerspectiveCameraRequestToJSON(value?: PerspectiveCameraRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field_of_view': value.fieldOfView,
        'camera_direction': DirectionRequestToJSON(value.cameraDirection),
        'camera_up_vector': DirectionRequestToJSON(value.cameraUpVector),
        'camera_view_point': PointRequestToJSON(value.cameraViewPoint),
        'bimdata_camera_direction': DirectionRequestToJSON(value.bimdataCameraDirection),
    };
}


