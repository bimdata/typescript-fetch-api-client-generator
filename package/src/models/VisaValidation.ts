/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserProject,
    UserProjectFromJSON,
    UserProjectFromJSONTyped,
    UserProjectToJSON,
} from './';

/**
 * 
 * @export
 * @interface VisaValidation
 */
export interface VisaValidation {
    /**
     * 
     * @type {number}
     * @memberof VisaValidation
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof VisaValidation
     */
    readonly visaId?: string;
    /**
     * 
     * @type {UserProject}
     * @memberof VisaValidation
     */
    validator?: UserProject;
    /**
     * This is the userproject_id. This field is only used if the call is made from an App
     * @type {number}
     * @memberof VisaValidation
     */
    validatorId?: number;
    /**
     * 
     * @type {string}
     * @memberof VisaValidation
     */
    readonly status?: VisaValidationStatusEnum;
    /**
     * Return True if validator has commented the visa
     * @type {boolean}
     * @memberof VisaValidation
     */
    readonly hasCommented?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof VisaValidation
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof VisaValidation
     */
    readonly updatedAt?: Date;
}

export function VisaValidationFromJSON(json: any): VisaValidation {
    return VisaValidationFromJSONTyped(json, false);
}

export function VisaValidationFromJSONTyped(json: any, ignoreDiscriminator: boolean): VisaValidation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'visaId': !exists(json, 'visa_id') ? undefined : json['visa_id'],
        'validator': !exists(json, 'validator') ? undefined : UserProjectFromJSON(json['validator']),
        'validatorId': !exists(json, 'validator_id') ? undefined : json['validator_id'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'hasCommented': !exists(json, 'has_commented') ? undefined : json['has_commented'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function VisaValidationToJSON(value?: VisaValidation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'validator': UserProjectToJSON(value.validator),
        'validator_id': value.validatorId,
    };
}

/**
* @export
* @enum {string}
*/
export enum VisaValidationStatusEnum {
    P = 'P',
    A = 'A',
    D = 'D'
}


