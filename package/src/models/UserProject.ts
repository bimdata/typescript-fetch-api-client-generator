/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProjectInvitation,
    ProjectInvitationFromJSON,
    ProjectInvitationFromJSONTyped,
    ProjectInvitationToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserProject
 */
export interface UserProject {
    /**
     * User's role in the project
     * @type {number}
     * @memberof UserProject
     */
    role?: number;
    /**
     * 
     * @type {User}
     * @memberof UserProject
     */
    user?: User;
    /**
     * 
     * @type {ProjectInvitation}
     * @memberof UserProject
     */
    invitation?: ProjectInvitation;
    /**
     * 
     * @type {number}
     * @memberof UserProject
     */
    project: number;
}

export function UserProjectFromJSON(json: any): UserProject {
    return UserProjectFromJSONTyped(json, false);
}

export function UserProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'role': !exists(json, 'role') ? undefined : json['role'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
        'invitation': !exists(json, 'invitation') ? undefined : ProjectInvitationFromJSON(json['invitation']),
        'project': json['project'],
    };
}

export function UserProjectToJSON(value?: UserProject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'role': value.role,
        'user': UserToJSON(value.user),
        'invitation': ProjectInvitationToJSON(value.invitation),
        'project': value.project,
    };
}


