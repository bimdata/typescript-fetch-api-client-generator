/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Feature,
    FeatureFromJSON,
    FeatureFromJSONTyped,
    FeatureToJSON,
} from './Feature';
import {
    MarketplaceAppLight,
    MarketplaceAppLightFromJSON,
    MarketplaceAppLightFromJSONTyped,
    MarketplaceAppLightToJSON,
} from './MarketplaceAppLight';
import {
    Organization,
    OrganizationFromJSON,
    OrganizationFromJSONTyped,
    OrganizationToJSON,
} from './Organization';
import {
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Cloud
 */
export interface Cloud {
    /**
     * 
     * @type {number}
     * @memberof Cloud
     */
    readonly id: number;
    /**
     * Name of the cloud
     * @type {string}
     * @memberof Cloud
     */
    name: string;
    /**
     * 
     * @type {Array<Feature>}
     * @memberof Cloud
     */
    readonly features: Array<Feature>;
    /**
     * 
     * @type {Array<MarketplaceAppLight>}
     * @memberof Cloud
     */
    readonly marketplace_apps: Array<MarketplaceAppLight>;
    /**
     * 
     * @type {Organization}
     * @memberof Cloud
     */
    readonly organization: Organization | null;
    /**
     * 
     * @type {User}
     * @memberof Cloud
     */
    readonly creator: User | null;
    /**
     * 
     * @type {string}
     * @memberof Cloud
     */
    readonly creator_app: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Cloud
     */
    readonly is_default: boolean;
    /**
     * Creation date
     * @type {Date}
     * @memberof Cloud
     */
    readonly created_at: Date;
    /**
     * 
     * @type {string}
     * @memberof Cloud
     */
    image?: string | null;
    /**
     * Date of the last update
     * @type {Date}
     * @memberof Cloud
     */
    readonly updated_at: Date;
}

export function CloudFromJSON(json: any): Cloud {
    return CloudFromJSONTyped(json, false);
}

export function CloudFromJSONTyped(json: any, ignoreDiscriminator: boolean): Cloud {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'features': ((json['features'] as Array<any>).map(FeatureFromJSON)),
        'marketplace_apps': ((json['marketplace_apps'] as Array<any>).map(MarketplaceAppLightFromJSON)),
        'organization': OrganizationFromJSON(json['organization']),
        'creator': UserFromJSON(json['creator']),
        'creator_app': json['creator_app'],
        'is_default': json['is_default'],
        'created_at': (new Date(json['created_at'])),
        'image': !exists(json, 'image') ? undefined : json['image'],
        'updated_at': (new Date(json['updated_at'])),
    };
}

export function CloudToJSON(value?: Cloud | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'image': value.image,
    };
}

