/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FolderWithoutChildrenRequest
 */
export interface FolderWithoutChildrenRequest {
    /**
     * 
     * @type {number}
     * @memberof FolderWithoutChildrenRequest
     */
    parent_id?: number | null;
    /**
     * Name of the folder
     * @type {string}
     * @memberof FolderWithoutChildrenRequest
     */
    name: string;
    /**
     * Permission for a Folder
     * 
     * * `1` - denied
     * * `50` - read_only
     * * `100` - read_write
     * @type {number}
     * @memberof FolderWithoutChildrenRequest
     */
    default_permission?: FolderWithoutChildrenRequestDefaultPermissionEnum;
    /**
     * 
     * @type {boolean}
     * @memberof FolderWithoutChildrenRequest
     */
    propagate?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum FolderWithoutChildrenRequestDefaultPermissionEnum {
    NUMBER_1 = 1,
    NUMBER_50 = 50,
    NUMBER_100 = 100
}

export function FolderWithoutChildrenRequestFromJSON(json: any): FolderWithoutChildrenRequest {
    return FolderWithoutChildrenRequestFromJSONTyped(json, false);
}

export function FolderWithoutChildrenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolderWithoutChildrenRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'parent_id': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        'name': json['name'],
        'default_permission': !exists(json, 'default_permission') ? undefined : json['default_permission'],
        'propagate': !exists(json, 'propagate') ? undefined : json['propagate'],
    };
}

export function FolderWithoutChildrenRequestToJSON(value?: FolderWithoutChildrenRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'parent_id': value.parent_id,
        'name': value.name,
        'default_permission': value.default_permission,
        'propagate': value.propagate,
    };
}

