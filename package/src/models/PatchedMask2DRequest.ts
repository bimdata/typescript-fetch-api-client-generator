/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedMask2DRequest
 */
export interface PatchedMask2DRequest {
    /**
     * Crop path of the manually created mask to show only a part of the model.
     * @type {Array<Array<number>>}
     * @memberof PatchedMask2DRequest
     */
    crop_path?: Array<Array<number>>;
    /**
     * Whether the mask is grayscale
     * @type {boolean}
     * @memberof PatchedMask2DRequest
     */
    grayscale?: boolean;
    /**
     * Opacity of the mask (0-1)
     * @type {number}
     * @memberof PatchedMask2DRequest
     */
    opacity?: number | null;
    /**
     * Brightness of the mask
     * @type {number}
     * @memberof PatchedMask2DRequest
     */
    brightness?: number | null;
    /**
     * Contrast of the mask
     * @type {number}
     * @memberof PatchedMask2DRequest
     */
    contrast?: number | null;
}

export function PatchedMask2DRequestFromJSON(json: any): PatchedMask2DRequest {
    return PatchedMask2DRequestFromJSONTyped(json, false);
}

export function PatchedMask2DRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedMask2DRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'crop_path': !exists(json, 'crop_path') ? undefined : json['crop_path'],
        'grayscale': !exists(json, 'grayscale') ? undefined : json['grayscale'],
        'opacity': !exists(json, 'opacity') ? undefined : json['opacity'],
        'brightness': !exists(json, 'brightness') ? undefined : json['brightness'],
        'contrast': !exists(json, 'contrast') ? undefined : json['contrast'],
    };
}

export function PatchedMask2DRequestToJSON(value?: PatchedMask2DRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'crop_path': value.crop_path,
        'grayscale': value.grayscale,
        'opacity': value.opacity,
        'brightness': value.brightness,
        'contrast': value.contrast,
    };
}

