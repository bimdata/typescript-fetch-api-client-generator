/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RawElementRequest
 */
export interface RawElementRequest {
    /**
     * 
     * @type {string}
     * @memberof RawElementRequest
     */
    uuid: string;
    /**
     * 
     * @type {string}
     * @memberof RawElementRequest
     */
    type: string;
    /**
     * 
     * @type {number}
     * @memberof RawElementRequest
     */
    attributes?: number | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof RawElementRequest
     */
    materialList?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof RawElementRequest
     */
    psets?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof RawElementRequest
     */
    classifications?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof RawElementRequest
     */
    layers?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof RawElementRequest
     */
    systems?: Array<number> | null;
}

export function RawElementRequestFromJSON(json: any): RawElementRequest {
    return RawElementRequestFromJSONTyped(json, false);
}

export function RawElementRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RawElementRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'type': json['type'],
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'materialList': !exists(json, 'material_list') ? undefined : json['material_list'],
        'psets': !exists(json, 'psets') ? undefined : json['psets'],
        'classifications': !exists(json, 'classifications') ? undefined : json['classifications'],
        'layers': !exists(json, 'layers') ? undefined : json['layers'],
        'systems': !exists(json, 'systems') ? undefined : json['systems'],
    };
}

export function RawElementRequestToJSON(value?: RawElementRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'type': value.type,
        'attributes': value.attributes,
        'material_list': value.materialList,
        'psets': value.psets,
        'classifications': value.classifications,
        'layers': value.layers,
        'systems': value.systems,
    };
}

