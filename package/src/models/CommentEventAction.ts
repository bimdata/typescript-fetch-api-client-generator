/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommentEventAction
 */
export interface CommentEventAction {
    /**
     * * `comment_created` - comment_created
     * * `comment_text_updated` - comment_text_updated
     * * `viewpoint_updated` - viewpoint_updated
     * * `viewpoint_removed` - viewpoint_removed
     * * `reply_to_comment_updated` - reply_to_comment_updated
     * * `reply_to_comment_removed` - reply_to_comment_removed
     * @type {string}
     * @memberof CommentEventAction
     */
    type: CommentEventActionTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CommentEventAction
     */
    value: string | null;
}

/**
* @export
* @enum {string}
*/
export enum CommentEventActionTypeEnum {
    CommentCreated = 'comment_created',
    CommentTextUpdated = 'comment_text_updated',
    ViewpointUpdated = 'viewpoint_updated',
    ViewpointRemoved = 'viewpoint_removed',
    ReplyToCommentUpdated = 'reply_to_comment_updated',
    ReplyToCommentRemoved = 'reply_to_comment_removed'
}

export function CommentEventActionFromJSON(json: any): CommentEventAction {
    return CommentEventActionFromJSONTyped(json, false);
}

export function CommentEventActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentEventAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'value': json['value'],
    };
}

export function CommentEventActionToJSON(value?: CommentEventAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'value': value.value,
    };
}

