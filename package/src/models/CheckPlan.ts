/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1 (v1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Ruleset,
    RulesetFromJSON,
    RulesetFromJSONTyped,
    RulesetToJSON,
} from './Ruleset';

/**
 * Adds nested create feature
 * @export
 * @interface CheckPlan
 */
export interface CheckPlan {
    /**
     * 
     * @type {number}
     * @memberof CheckPlan
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof CheckPlan
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CheckPlan
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CheckPlan
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof CheckPlan
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {Array<Ruleset>}
     * @memberof CheckPlan
     */
    rulesets?: Array<Ruleset>;
    /**
     * 
     * @type {boolean}
     * @memberof CheckPlan
     */
    readonly isDefault: boolean;
}

export function CheckPlanFromJSON(json: any): CheckPlan {
    return CheckPlanFromJSONTyped(json, false);
}

export function CheckPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckPlan {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'rulesets': !exists(json, 'rulesets') ? undefined : ((json['rulesets'] as Array<any>).map(RulesetFromJSON)),
        'isDefault': json['is_default'],
    };
}

export function CheckPlanToJSON(value?: CheckPlan | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'rulesets': value.rulesets === undefined ? undefined : ((value.rulesets as Array<any>).map(RulesetToJSON)),
    };
}

