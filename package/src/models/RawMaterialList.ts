/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RawMaterial,
    RawMaterialFromJSON,
    RawMaterialFromJSONTyped,
    RawMaterialToJSON,
} from './RawMaterial';
import {
    RawMaterialListComponents,
    RawMaterialListComponentsFromJSON,
    RawMaterialListComponentsFromJSONTyped,
    RawMaterialListComponentsToJSON,
} from './RawMaterialListComponents';
import {
    RawMaterialOptions,
    RawMaterialOptionsFromJSON,
    RawMaterialOptionsFromJSONTyped,
    RawMaterialOptionsToJSON,
} from './RawMaterialOptions';

/**
 * 
 * @export
 * @interface RawMaterialList
 */
export interface RawMaterialList {
    /**
     * 
     * @type {Array<RawMaterial>}
     * @memberof RawMaterialList
     */
    materials_data?: Array<RawMaterial> | null;
    /**
     * 
     * @type {Array<RawMaterialListComponents>}
     * @memberof RawMaterialList
     */
    list_components?: Array<RawMaterialListComponents> | null;
    /**
     * 
     * @type {Array<RawMaterialOptions>}
     * @memberof RawMaterialList
     */
    options?: Array<RawMaterialOptions> | null;
}

export function RawMaterialListFromJSON(json: any): RawMaterialList {
    return RawMaterialListFromJSONTyped(json, false);
}

export function RawMaterialListFromJSONTyped(json: any, ignoreDiscriminator: boolean): RawMaterialList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'materials_data': !exists(json, 'materials_data') ? undefined : (json['materials_data'] === null ? null : (json['materials_data'] as Array<any>).map(RawMaterialFromJSON)),
        'list_components': !exists(json, 'list_components') ? undefined : (json['list_components'] === null ? null : (json['list_components'] as Array<any>).map(RawMaterialListComponentsFromJSON)),
        'options': !exists(json, 'options') ? undefined : (json['options'] === null ? null : (json['options'] as Array<any>).map(RawMaterialOptionsFromJSON)),
    };
}

export function RawMaterialListToJSON(value?: RawMaterialList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'materials_data': value.materials_data === undefined ? undefined : (value.materials_data === null ? null : (value.materials_data as Array<any>).map(RawMaterialToJSON)),
        'list_components': value.list_components === undefined ? undefined : (value.list_components === null ? null : (value.list_components as Array<any>).map(RawMaterialListComponentsToJSON)),
        'options': value.options === undefined ? undefined : (value.options === null ? null : (value.options as Array<any>).map(RawMaterialOptionsToJSON)),
    };
}

