/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelDocumentRequest
 */
export interface ModelDocumentRequest {
    /**
     * Shown name of the file
     * @type {string}
     * @memberof ModelDocumentRequest
     */
    name: string;
    /**
     * Full name of the file
     * @type {string}
     * @memberof ModelDocumentRequest
     */
    file_name?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelDocumentRequest
     */
    parent_id?: number | null;
    /**
     * Description of the file
     * @type {string}
     * @memberof ModelDocumentRequest
     */
    description?: string | null;
    /**
     * 
     * @type {Blob}
     * @memberof ModelDocumentRequest
     */
    file: Blob;
    /**
     * Provide a info about the document in order to customize the way it is processed.
     * 
     * * `PHOTOSPHERE` - PHOTOSPHERE
     * @type {string}
     * @memberof ModelDocumentRequest
     */
    process_hint?: ModelDocumentRequestProcessHintEnum;
}

/**
* @export
* @enum {string}
*/
export enum ModelDocumentRequestProcessHintEnum {
    Photosphere = 'PHOTOSPHERE'
}

export function ModelDocumentRequestFromJSON(json: any): ModelDocumentRequest {
    return ModelDocumentRequestFromJSONTyped(json, false);
}

export function ModelDocumentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelDocumentRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'file_name': !exists(json, 'file_name') ? undefined : json['file_name'],
        'parent_id': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'file': json['file'],
        'process_hint': !exists(json, 'process_hint') ? undefined : json['process_hint'],
    };
}

export function ModelDocumentRequestToJSON(value?: ModelDocumentRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'file_name': value.file_name,
        'parent_id': value.parent_id,
        'description': value.description,
        'file': value.file,
        'process_hint': value.process_hint,
    };
}

