/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Invitation
 */
export interface Invitation {
    /**
     * 
     * @type {number}
     * @memberof Invitation
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof Invitation
     */
    readonly client_id: number;
    /**
     * User will be redirected to this uri when they accept the invitation
     * @type {string}
     * @memberof Invitation
     */
    redirect_uri: string;
    /**
     * 
     * @type {string}
     * @memberof Invitation
     */
    cloud_name: string;
    /**
     * Role the user will have when they accept the invitation
     * 
     * * `100` - admin
     * * `50` - user
     * @type {number}
     * @memberof Invitation
     */
    cloud_role: InvitationCloudRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof Invitation
     */
    project_name?: string;
    /**
     * Role the user will have when they accept the invitation
     * 
     * * `100` - admin
     * * `50` - user
     * * `25` - guest
     * @type {number}
     * @memberof Invitation
     */
    project_role?: InvitationProjectRoleEnum;
    /**
     * email of the user to invite
     * @type {string}
     * @memberof Invitation
     */
    email: string;
    /**
     * 
     *         A: Accepted
     *         D: Denied
     *         P: Pending
     *         
     * 
     * * `A` - accepted
     * * `D` - denied
     * * `P` - pending
     * @type {string}
     * @memberof Invitation
     */
    status?: InvitationStatusEnum;
    /**
     * OIDC sub of the sender. The original sub from the provider is used instead of the broker sub
     * @type {string}
     * @memberof Invitation
     */
    sender_provider_sub?: string;
}

/**
* @export
* @enum {string}
*/
export enum InvitationCloudRoleEnum {
    NUMBER_100 = 100,
    NUMBER_50 = 50
}/**
* @export
* @enum {string}
*/
export enum InvitationProjectRoleEnum {
    NUMBER_100 = 100,
    NUMBER_50 = 50,
    NUMBER_25 = 25,
    NUMBER_null = null
}/**
* @export
* @enum {string}
*/
export enum InvitationStatusEnum {
    A = 'A',
    D = 'D',
    P = 'P'
}

export function InvitationFromJSON(json: any): Invitation {
    return InvitationFromJSONTyped(json, false);
}

export function InvitationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Invitation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'client_id': json['client_id'],
        'redirect_uri': json['redirect_uri'],
        'cloud_name': json['cloud_name'],
        'cloud_role': json['cloud_role'],
        'project_name': !exists(json, 'project_name') ? undefined : json['project_name'],
        'project_role': !exists(json, 'project_role') ? undefined : json['project_role'],
        'email': json['email'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'sender_provider_sub': !exists(json, 'sender_provider_sub') ? undefined : json['sender_provider_sub'],
    };
}

export function InvitationToJSON(value?: Invitation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'redirect_uri': value.redirect_uri,
        'cloud_name': value.cloud_name,
        'cloud_role': value.cloud_role,
        'project_name': value.project_name,
        'project_role': value.project_role,
        'email': value.email,
        'status': value.status,
        'sender_provider_sub': value.sender_provider_sub,
    };
}

