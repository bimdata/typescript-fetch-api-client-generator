/* tslint:disable */
/* eslint-disable */
/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GroupRequest,
    GroupRequestFromJSON,
    GroupRequestFromJSONTyped,
    GroupRequestToJSON,
} from './GroupRequest';

/**
 * 
 * @export
 * @interface FolderGroupPermissionRequest
 */
export interface FolderGroupPermissionRequest {
    /**
     * 
     * @type {GroupRequest}
     * @memberof FolderGroupPermissionRequest
     */
    group: GroupRequest;
    /**
     * Group's permission for a folder
     * @type {number}
     * @memberof FolderGroupPermissionRequest
     */
    permission?: FolderGroupPermissionRequestPermissionEnum;
}

/**
* @export
* @enum {string}
*/
export enum FolderGroupPermissionRequestPermissionEnum {
    NUMBER_1 = 1,
    NUMBER_50 = 50,
    NUMBER_100 = 100
}

export function FolderGroupPermissionRequestFromJSON(json: any): FolderGroupPermissionRequest {
    return FolderGroupPermissionRequestFromJSONTyped(json, false);
}

export function FolderGroupPermissionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolderGroupPermissionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'group': GroupRequestFromJSON(json['group']),
        'permission': !exists(json, 'permission') ? undefined : json['permission'],
    };
}

export function FolderGroupPermissionRequestToJSON(value?: FolderGroupPermissionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'group': GroupRequestToJSON(value.group),
        'permission': value.permission,
    };
}

